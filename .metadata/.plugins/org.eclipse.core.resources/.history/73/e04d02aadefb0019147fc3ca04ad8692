package modelos;

import java.util.Date;

import com.db4o.Db4oEmbedded;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;

import utiles.Libreria;

public class C1Profesores {
	
	Libreria a1 = new Libreria();

	private int codProf;
	private String nombreApe;
	private String nombreEspe;
	private String fechaNac;
	private String sexo;
	private C1Centros c1Centros;
	
	public C1Profesores() {
		
	}
	
	public C1Profesores(int codProf, String nombreApe, String nombreEspe, String fechaNac, String sexo, C1Centros c1Centros) {
		this.codProf = codProf;
		this.nombreApe = nombreApe;
		this.nombreEspe = nombreEspe;
		this.fechaNac = fechaNac;
		this.sexo = sexo;
		this.c1Centros = c1Centros;
	}

	public int getCodProf() {
		return codProf;
	}

	public void setCodProf(int codProf) {
		this.codProf = codProf;
	}

	public String getNombreApe() {
		return nombreApe;
	}

	public void setNombreApe(String nombreApe) {
		this.nombreApe = nombreApe;
	}

	public String getNombreEspe() {
		return nombreEspe;
	}

	public void setNombreEspe(String nombreEspe) {
		this.nombreEspe = nombreEspe;
	}

	public String getFechaNac() {
		return fechaNac;
	}

	public void setFechaNac(String fechaNac) {
		this.fechaNac = fechaNac;
	}

	public String getSexo() {
		return sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}

	public C1Centros getC1Centros() {
		return c1Centros;
	}

	public void setC1Centros(C1Centros c1Centros) {
		this.c1Centros = c1Centros;
	}
	
	@Override
	public String toString() {
		return "Profesores [codProf=" + codProf + ", nombreApe=" + nombreApe + ", nombreEspe=" + nombreEspe+", fechaNac="+fechaNac+", sexo="+sexo+", centros="+c1Centros+"]";
	}
	
	public boolean comprobarProfesores(C1Profesores p) {
		ObjectContainer bd=Db4oEmbedded.openFile(Db4oEmbedded.newConfiguration(),"basedatos.db4o");
		ObjectSet res = bd.queryByExample(p);
		boolean b = false;
		if(res.isEmpty()) {
			System.out.println("No existe el elemento");
			b = false;
		}else {
			System.out.println("El elemento existe:"+res.next());
			b = true;
		}
		bd.close();
		return b;
	}
	
	public void insertarProfesores(C1Profesores p) {
		if (!comprobarProfesores(p)) {
			ObjectContainer bd=Db4oEmbedded.openFile(Db4oEmbedded.newConfiguration(),"basedatos.db4o");
			bd.store(p);
			bd.close();
		}else {
			System.out.println("Ya existe");
		}
	}
	
	public void insertarProfesorComprobacion() {
		int id = a1.excepcionintcontexto("Codigo profesor:");
		if (comprobarProfesores(new C1Profesores(id,null,null,null,null,null))) {
			System.out.println("Profesor ya insertado");
			break;
		}else {
			insertarProfesores(new C1Profesores(id,a1.excepcionstringcontexto("Nombre profesor:"),a1.excepcionstringcontexto("Especialidad:"),a1.excepcionstringcontexto("Fecha nacimiento:"),a1.excepcionstringcontexto("Sexo:"),c = new C1Centros(a1.excepcionintcontexto("Codigo centro:"),a1.excepcionstringcontexto("Nombre:"),p = new C1Profesores(a1.excepcionintcontexto("Codigo profesor:"),a1.excepcionstringcontexto("Nombre profesor:"),a1.excepcionstringcontexto("Especialidad:"),a1.excepcionstringcontexto("Fecha nacimiento:"),a1.excepcionstringcontexto("Sexo:"),null),a1.excepcionstringcontexto("Direccion:"),a1.excepcionstringcontexto("Localidad:"),a1.excepcionstringcontexto("Provincia"))));
		}
	}
	
	public void borrarProfesores(C1Profesores p) {
		if (comprobarProfesores(p)) {
			ObjectContainer bd=Db4oEmbedded.openFile(Db4oEmbedded.newConfiguration(),"basedatos.db4o");
			ObjectSet res = bd.queryByExample(p);
			C1Profesores as = (C1Profesores)res.next();
			bd.delete(as);
			bd.close();
		}else {
			System.out.println("No existe");
		}
	}
	
	public void actualizarProfesores(int cod,String nombre,String nombrees,String fechanac,String sexo,C1Centros cen) {
        ObjectContainer bd=Db4oEmbedded.openFile(Db4oEmbedded.newConfiguration(),"basedatos.db4o");
        try {
        ObjectSet res = bd.queryByExample(new C1Profesores(cod,null,null, null, null, null));
        C1Profesores a=(C1Profesores)res.next();
        a.setNombreApe(nombre);
        a.setNombreEspe(nombrees);
        a.setFechaNac(fechanac);
        a.setSexo(sexo);
        a.setC1Centros(cen);
        bd.store(a);
        System.out.println("Profesor modificado");
    }catch(IllegalStateException ex) {
    	System.out.println("NOPE"+ex);
    }
        bd.close();
    }
	
	public void consultarAsignaturas(C1Profesores p) {
        C1Asignaturas a = new C1Asignaturas(null,null,null);
        C1Profesores pa;
        ObjectContainer bd=Db4oEmbedded.openFile(Db4oEmbedded.newConfiguration(),"basedatos.db4o");
        ObjectSet res = bd.queryByExample(p);
        while(res.hasNext()) {
            pa=(C1Profesores)res.next();
            ObjectSet resa= bd.queryByExample(a);
            while(resa.hasNext()) {
                C1Asignaturas a1 = (C1Asignaturas)resa.next();
                    if(a1.getSetprofesores().contains(pa)) {
                        System.out.println(a1.getNombreAsi());
                    }
            }
        }
        bd.close();
    }
}
